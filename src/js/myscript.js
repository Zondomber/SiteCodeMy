function onEntry(t){t.forEach(t=>{t.isIntersecting&&t.target.classList.add("show")})}$(document).ready(function(){$("#form1").submit(function(t){return t.preventDefault(),$.ajax({type:"POST",url:"php/mail.php",data:$(this).serialize()}).done(function(){$(this).find("input").val(""),alert("Успешно отправленно"),$("form").trigger("reset")}),!1})}),$(document).ready(function(){$("#form2").submit(function(t){return t.preventDefault(),$.ajax({type:"POST",url:"php/mail_tel.php",data:$(this).serialize()}).done(function(){$(this).find("input").val(""),alert("Успешно отправленно!"),$("form").trigger("reset")}),!1})}),$(document).ready(function(){let t=new IntersectionObserver(onEntry,{threshold:[.5]});$(".Section-anim").each((e,n)=>{t.observe(n)})});